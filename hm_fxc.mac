/*  fxc.exeをを使って(.fx)ファイルの構文検査を行う。

作り中。


【動作】
・選択範囲があればその範囲をプリプロセスします。
    →  一時ファイルを使ってプリプロセスするので #include がうまく処理できません。

・選択範囲が無ければファイル全体をプリプロセスします。
    →  「ファイルが保存されていない 、又は、更新されている」と、一時ファイルを使って
        プリプロセスするので #include がうまく処理できません。
    → 「ファイルが保存済み、かつ、未更新」なら、ファイルをそのまま使うので、
        #include もうまく処理できる。
*/



/////////////////////////////////////////////////////////////////////////////
//	ユーザーカスタマイズ
/////////////////////////////////////////////////////////////////////////////

//一時ディレクトリ
//$_g_tmp_dir = hidemarudir + "/mcpp/macro_temp/";
//テンポラリファイル名（ベース名）
//環境変数TMPのディレクトリに生成する。（可能な限り削除される）
$g_tmpfile_base_name 	= "tmp_hidemaru_fxc_macro";

//fxc.exe へのパス
$_g_exe_mcpp= "\"" + "C:\\Program Files (x86)\\Microsoft DirectX SDK (June 2010)\\Utilities\\bin\\x64\\fxc.exe" + "\"";

//fxc.exe のオプション
$_g_opt_base= "/T fx_4_1 ";
//$_g_opt_inc = "-I../include -I../inc ";
$_g_opt_ex	= "";









/////////////////////////////////////////////////////////////////////////////
//	メイン処理
/////////////////////////////////////////////////////////////////////////////
$_g_abs_tmp_filename = "";


call Main;
endmacro;

Main:
	##old_x=x;
	##old_y=y;

	call Start;
	
	//一時ファイルを削除する
	call RemoveTmpFile;
	
	moveto ##old_x, ##old_y;
	return ##return ;

Start:
	$$opt				= $_g_opt_base + $_g_opt_ex;
	##use_tmp_file		= true;
	$$tmp_in_filename	= "";
	
	if(selecting || rectselecting){
		//一時ファイルを使用
	}else{
		if(0 == strlen(filename)){
			//無題
		}else{
			$$tmp_in_filename	= filename;
			##use_tmp_file		= false;

			//$$opt = $$opt + $_g_opt_inc;
		}
	}

	if(##use_tmp_file){
		call GetTempFile ".txt";
		$$tmp_in_filename	= $$return;
		$_g_abs_tmp_filename= $$tmp_in_filename;
		if(! strlen($$tmp_in_filename)){
			return false;
		}
		call MakeFile  $$tmp_in_filename;
		if(false == ##return){
			return false;
		}
	}

	call SpawnMcpp $$opt, $$tmp_in_filename;		//, $$tmp_out_filename;
	if(false == ##return){
		return false;
	}

	return true;

MakeFile:
	$$tmp_filename = $$1;

	if(selecting || rectselecting){
		//pass
	}else{
		selectall;
	}

	//選択範囲をクリップボードへコピー
	copy2;

	//新しい秀丸へ貼り付け
	##cur_hidemaru = hidemaruhandle(0);
	newfile;
	##dst_hidemaru = hidemaruhandle(0);
	poppaste;

	//新しい秀丸をファイルへ保存
	saveas $$tmp_filename;

	//元の秀丸に戻す。
	setactivehidemaru ##cur_hidemaru;
	//この秀丸はいらないので閉じる。
	closehidemaru ##dst_hidemaru;

	return true;

SpawnMcpp:
	$$opt = $$1;
	$$tmp_in_filename	= "\"" + $$2 + "\"";
	//$$tmp_out_filename	= "\"" + $$2 + "\"";

	//新しい秀丸へ貼り付け
	##cur_hidemaru = hidemaruhandle(0);
	newfile;
	##dst_hidemaru = hidemaruhandle(0);

	disabledraw;
	$cmd = $_g_exe_mcpp + " " + $$opt + " " + $$tmp_in_filename;
	runex $cmd, 1,
		0, "",
		1, "",
		1, "",
		0, "",
		2, 1, 0;
	if(!result){
		message "runex関数で失敗";
		return false;
	}
	
	return true;

//テンポラリファイル作成サブルーチン
GetTempFile:
	$$ext = $$1;
	$$tempdir = getenv("tmp");
	if( leftstr( $$tempdir, 1 ) != "\\" ) {
		$$tempdir = $$tempdir + "\\";
	}
	##n		= tickcount;
	##end 	= ##n + 1000;
	while(##n < ##end){
	 	$$tempfile = $$tempdir + $g_tmpfile_base_name + str(##n) + $$ext;
	 	if( !existfile( $$tempfile ) ) {
			return $$tempfile;
		}
	 	##n = ##n + 1;
	}
	message "テンポラリファイルが作成できません\n" + $$tempfile;
	return "";

RemoveTmpFile:
	$$fn = $_g_abs_tmp_filename;
	if(strlen($$fn)){
		deletefile $$fn;
	}
	return ;
